// /Users/iwanhae/git/uuid/v4_test.go
package uuid_test

import (
	"testing"

	"gosuda.org/uuid"
)

func TestNewV4(t *testing.T) {
	id := uuid.NewV4()
	if len(id) != 16 {
		t.Errorf("NewV4() returned UUID with length %d, want 16", len(id))
	}
}

func TestUUIDVersion(t *testing.T) {
	uuid := uuid.NewV4()
	if (uuid[6] & 0xf0) != 0x40 {
		t.Errorf("UUID version is not 4, got 0x%x", uuid[6])
	}
}

func TestUUIDVariant(t *testing.T) {
	uuid := uuid.NewV4()
	if (uuid[8] & 0xc0) != 0x80 {
		t.Errorf("UUID variant is not 10, got 0x%x", uuid[8])
	}
}

func TestUUIDRandomness(t *testing.T) {
	uuid1 := uuid.NewV4()
	uuid2 := uuid.NewV4()
	if uuid1 == uuid2 {
		t.Errorf("UUIDs generated by newRandomFromPool() are not random")
	}
}

func BenchmarkNewV4(b *testing.B) {
	for i := 0; i < b.N; i++ {
		uuid.NewV4()
	}
}

func BenchmarkConcurrencyNewV4(b *testing.B) {
	b.SetParallelism(100_000)
	b.RunParallel(func(p *testing.PB) {
		for p.Next() {
			uuid.NewV4()
		}
	})
}
